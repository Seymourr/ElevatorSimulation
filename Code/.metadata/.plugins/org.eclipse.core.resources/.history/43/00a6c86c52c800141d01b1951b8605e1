import java.util.ArrayList;
import java.util.Random;
public class TrafficGenerator {
	
	private ElevatorSpecs specs;
	public TrafficGenerator(ElevatorSpecs specs)
	{
		this.specs = specs;
	}
	
	//Is skylobby a legit destination?
	//Call amount is one of the three traffic weights(1000, 5000, 10000)
	
	
	
	private int getRandomNumber(int low, int high)
	{
		Random r = new Random();
		int destination = r.nextInt(high-low) + low; 
		return destination;
	}
	
	public ArrayList<Passenger> getTraffic(TrafficType t, int callAmount) throws Exception
	{
	ArrayList<Call>	calls = new ArrayList<Call>();
		
		switch(t)
		{
			case UPPEAK:

				
				for(int i = 0; i < callAmount; i++)
				{
					Call c = new Call(getRandomNumber(0, specs.getPeriodTime()), 0, getRandomNumber(1, specs.getFloors() + 1));
					calls.add(c);
				}
				break;
			case LUNCH:
				for(int i = 0; i < calls.size(); i++)
				{
					calls.get(i).setPreviousFloor(pass.get(i).getFloor());
					calls.get(i).setDestination(0); //Lobby
				}
				break;
			case DOWNPEAK:
				for(int i = 0; i < pass.size(); i++)
				{
					pass.get(i).setDestination(0); //Lobby, final destination for the day
				}
				break;
			case REGULAR:
				for(int i = 0; i < pass.size(); i++)
				{
					int Low = 0; //Inclusive
					int High = floors + 1;
					int destination = r.nextInt(High-Low)+Low;
					while(destination != pass.get(i).getFloor())
					{
						destination = r.nextInt(High-Low)+Low;
					}
					pass.get(i).setDestination(destination); 		
				}
				break;
			default: throw new Exception("Wrong traffictype");
		}
		
		return pass;
	}
}
